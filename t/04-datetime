use Test;
use Olson-TZ;

plan 8;

my Olson-TZ $tz .= new(name => 'Europe/Dublin');

my DateTime $dt .= new(0, :timezone($tz));
is($dt.timezone, $tz, '.new(Int) preserves :timezone');
is($dt.later(seconds => 0).timezone, $tz, '.later() preserves :timezone');
isa-ok($dt.utc.timezone, Olson-TZ, '.utc() preserves timezone class');
isa-ok($dt.local.timezone, Olson-TZ, '.local() preserves timezone class');

my DateTime  $utc-hot .= new(:year(2014), :month(6), :day(2), :hour(12));
my DateTime  $ist-hot .= new(:year(2014), :month(6), :day(2), :hour(13), :timezone($tz));	# summer time was in effect
is $tz.utc-offset-in-seconds($utc-hot.posix), 60 * 60, 'IST summer offset';
is   $utc-hot.posix - $ist-hot.posix, 0, 'noon UTC is 1P IST in Dublin on summer days';

my DateTime $utc-cold .= new(:year(2014), :month(2), :day(2), :hour(12));
my DateTime $gmt-cold .= new(:year(2014), :month(2), :day(2), :hour(12), :timezone($tz));	# standard/gm time was in effect
is $tz.utc-offset-in-seconds($utc-cold.posix), 0, 'IST winter offset';
is $utc-cold.posix - $gmt-cold.posix, 0, 'noon UTC is noon GMT in Dublin on winter days';
