use Test;
use Olson-TZ;

plan 9;

my Olson-TZ $tz .= new;
is($tz.abbreviation(), 'UTC', 'default to UTC - abbr');
is($tz.utc-offset-in-seconds(), 0, 'default to UTC - offset');
is(~$tz, 'UTC', 'stringification works');
is(+$tz, 0, 'numification works');

# fixtures
my DateTime $new-years .= new('2014-01-01T12:00:00');
constant dt = -5 * 60 * 60;
constant name = 'America/New_York';
constant tz = 'EST';

$tz = Olson-TZ.new(name => name);
is($tz.name, name, 'name');
is($tz.abbreviation($new-years.posix), tz, 'abbr');
is($tz.utc-offset-in-seconds($new-years.posix), dt, 'dt');

my $tznow = qx/date +%Z/.chop;
my $dt = do given $tznow {
	when 'EST'	{ dt }
	when 'EDT'	{ dt + 60 * 60 }
	default		{ Failure.new("can't determine current timezone") }
}
is($tz.abbreviation(), $tznow, 'current abbr');
is($tz.utc-offset-in-seconds(), $dt, 'current offset');
